// Mocks generated by Mockito 5.4.4 from annotations
// in thoughts_app/test/unit/dashboard/dashboard_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:thoughts_app/features/auth/domain/auth_repository.dart' as _i2;
import 'package:thoughts_app/features/meditation/domain/meditation_repository.dart'
    as _i4;
import 'package:thoughts_app/features/meditation/domain/model/category_model.dart'
    as _i6;
import 'package:thoughts_app/features/meditation/domain/model/meditation_model.dart'
    as _i7;
import 'package:thoughts_app/features/meditation/domain/model/narrator_model.dart'
    as _i5;
import 'package:thoughts_app/features/profile/domain/profile_repository.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i2.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get hasAuthenticatedUser => (super.noSuchMethod(
        Invocation.getter(#hasAuthenticatedUser),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> authorize() => (super.noSuchMethod(
        Invocation.method(
          #authorize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> signUp(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            email,
            password,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [MeditationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeditationRepository extends _i1.Mock
    implements _i4.MeditationRepository {
  MockMeditationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> fetchData() => (super.noSuchMethod(
        Invocation.method(
          #fetchData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i5.NarratorModel? narratorById(String? narratorId) =>
      (super.noSuchMethod(Invocation.method(
        #narratorById,
        [narratorId],
      )) as _i5.NarratorModel?);

  @override
  _i6.CategoryModel? categoryById(String? categoryId) =>
      (super.noSuchMethod(Invocation.method(
        #categoryById,
        [categoryId],
      )) as _i6.CategoryModel?);

  @override
  List<_i7.MeditationModel>? meditationsByCategory(String? categoryId) =>
      (super.noSuchMethod(Invocation.method(
        #meditationsByCategory,
        [categoryId],
      )) as List<_i7.MeditationModel>?);
}

/// A class which mocks [ProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepository extends _i1.Mock implements _i8.ProfileRepository {
  MockProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get hasUserData => (super.noSuchMethod(
        Invocation.getter(#hasUserData),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String> getUserName() => (super.noSuchMethod(
        Invocation.method(
          #getUserName,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getUserName,
            [],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<void> updateUserName(String? name) => (super.noSuchMethod(
        Invocation.method(
          #updateUserName,
          [name],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearUserData() => (super.noSuchMethod(
        Invocation.method(
          #clearUserData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
